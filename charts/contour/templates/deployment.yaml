apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "contour.fullname" . }}
  labels:
    app: {{ template "contour.name" . }}
    chart: {{ template "contour.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "contour.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "contour.name" . }}
        release: {{ .Release.Name }}
    {{- with .Values.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
      containers:
      # Note that by default we use appVersion to get images tag.
      - image: "{{ .Values.controller.image.repository }}:{{ default .Chart.AppVersion .Values.controller.image.tag }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        name: contour
        command: ["contour"]
        args: ["serve", "--incluster", "--envoy-service-http-port", "8080", "--envoy-service-https-port", "8443"]
      - image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
        imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
        name: envoy
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        command: ["envoy"]
        args:
        - --config-path /config/contour.yaml
        - --service-cluster cluster0
        - --service-node node0
        - --log-level info
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8002
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: contour-config
          mountPath: /config
        lifecycle:
          preStop:
            exec:
              command: ["wget", "-qO-", "--post-data=''", "http://localhost:9001/healthcheck/fail"]
        volumeMounts:
        - name: contour-config
          mountPath: /config
      initContainers:
      - image: "{{ .Values.controller.image.repository }}:{{ default .Chart.AppVersion .Values.controller.image.tag }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        name: envoy-initconfig
        command: ["contour"]
        args:
        - bootstrap
        {{- if .Values.controller.statsd.enabled }}
        - --statsd-enable
        {{- end }}
        {{- if .Values.controller.stats.address }}
        - --stats-address={{ .Values.controller.stats.address }}
        {{- end }}
        {{- if .Values.controller.stats.port }}
        - --stats-port={{ .Values.controller.stats.port }}
        {{- end }}
        - /config/contour.yaml
        volumeMounts:
        - name: contour-config
          mountPath: /config
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: contour-config
        emptyDir: {}
      dnsPolicy: ClusterFirst
      serviceAccountName: {{ template "contour.fullname" . }}
      terminationGracePeriodSeconds: 30
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      # The affinity stanza below tells Kubernetes to try hard not to place 2 of
      # these pods on the same node.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "contour.name" . }}
            topologyKey: "kubernetes.io/hostname"
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
