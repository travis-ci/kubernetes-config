1. The {{ template "contour.fullname" . }} is getting provisioned in your cluster. After a few minutes, you can run the following to verify.

To verify that {{ template "contour.fullname" . }} has started, run:

  kubectl --namespace={{ .Release.Namespace }} get pods -l "app={{ template "contour.name" . }}"

2. Get your contour service URL:

{{- if contains "LoadBalancer" .Values.service.type }}

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "contour.name" . }}'

  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }}  {{ template "contour.name" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP

{{- else if contains "ClusterIP"  .Values.service.type }}

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }}  -l "app={{ template "contour.name" . }}" -o jsonpath="{.items[0].metadata.name}")
  echo http://127.0.0.1:{{ .Values.service.externalPort }}
  kubectl port-forward --namespace {{ .Release.Namespace }} $POD_NAME {{ .Values.service.externalPort }}:{{ .Values.service.externalPort }}

{{- else if contains "NodePort" .Values.service.type }}

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }}  -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "contour.name" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }}  -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT/

{{- end }}
